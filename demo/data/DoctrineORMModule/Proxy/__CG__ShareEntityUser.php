<?php

namespace DoctrineORMModule\Proxy\__CG__\Share\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Share\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'first_name', 'last_name', 'gender', 'username', 'password', 'email', 'admin', 'product_users', 'trust_users', 'trusts', 'lend_users', '' . "\0" . 'Share\\Entity\\User' . "\0" . 'users_trusted', '' . "\0" . 'Share\\Entity\\User' . "\0" . 'users_that_trust_me');
        }

        return array('__isInitialized__', 'id', 'first_name', 'last_name', 'gender', 'username', 'password', 'email', 'admin', 'product_users', 'trust_users', 'trusts', 'lend_users', '' . "\0" . 'Share\\Entity\\User' . "\0" . 'users_trusted', '' . "\0" . 'Share\\Entity\\User' . "\0" . 'users_that_trust_me');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getUsersTrusted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsersTrusted', array());

        return parent::getUsersTrusted();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsersThatTrustMe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsersThatTrustMe', array());

        return parent::getUsersThatTrustMe();
    }

    /**
     * {@inheritDoc}
     */
    public function addUsersThatTrustMe(\Share\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUsersThatTrustMe', array($user));

        return parent::addUsersThatTrustMe($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductUsers', array());

        return parent::getProductUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductUsers($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductUsers', array($value));

        return parent::setProductUsers($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrustUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrustUsers', array());

        return parent::getTrustUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrustUsers($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrustUsers', array($value));

        return parent::setTrustUsers($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrusts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrusts', array());

        return parent::getTrusts();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrusts($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrusts', array($value));

        return parent::setTrusts($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getLendUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLendUsers', array());

        return parent::getLendUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setLendUsers($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLendUsers', array($value));

        return parent::setLendUsers($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($value));

        return parent::setFirstName($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($value));

        return parent::setLastName($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', array());

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', array($value));

        return parent::setGender($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', array());

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserName($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserName', array($value));

        return parent::setUserName($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassWord($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassWord', array($value));

        return parent::setPassWord($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassWord()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassWord', array());

        return parent::getPassWord();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($value));

        return parent::setEmail($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdmin', array());

        return parent::getAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdmin($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdmin', array($value));

        return parent::setAdmin($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addTrustedUser(\Share\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTrustedUser', array($user));

        return parent::addTrustedUser($user);
    }

}
